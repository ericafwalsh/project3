{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\timwa\\\\Desktop\\\\rutgers\\\\homework\\\\project3\\\\client\\\\src\\\\pages\\\\Form.js\";\n// import React, { Component } from \"react\";\n// // import Jumbotron from \"../../components/Jumbotron\";\n// // import DeleteBtn from \"../../components/DeleteBtn\";\n// import API from \"../utils/API\";\n// // import { Col, Row, Container } from \"../../components/Grid\";\n// // import { List, ListItem } from \"../../components/List\";\n// // import { Input, TextArea, FormBtn } from \"../../components/Form\";\n// class Form extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {serialNumber: \"\",\n//     // need to change this back to name\n//     title: \"\",\n//     address: \"\",\n//     phoneNumber: \"\",\n//     history: \"\",\n//     medications: \"\",\n//     allergies: \"\",\n//     eContactName: \"\",\n//     eContactPhoneNumber: \"\",\n//     eContactEmail: \"\"};\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleChange(event) {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n//   handleSubmit(event) {\n//     console.log(\"the form worked!\")\n//     console.log(this.state.address);\n//     event.preventDefault();\n//     event.target.reset();\n//   }\n//   render() {\n//     return (\n//       <div className=\"formWrapper\">\n//         <form onSubmit={this.handleSubmit}>\n//           {/* Serial number */}\n//           <div className=\"form-group\">\n//             <div className=\"row\">\n//               <div className=\"col\">\n//                 <label>Button Serial Number</label>\n//                 <input type=\"text\" className=\"form-control\" name=\"serialNumber\" onChange={this.handleChange} placeholder=\"Enter serial number\"></input>\n//                 <small id=\"emailHelp\" className=\"form-text text-muted\">This is found on the bottom of the button with 4 numbers and 4 letters.</small>\n//               </div>\n//               <div className=\"col\">\n//                 <img className=\"buttonPic\" src=\"https://media.amazonwebservices.com/blog/2017/IoTEnterprise-16-AWSIoTButtonSerialNum-sm.png\" alt=\"amazonButtonBack\"></img>\n//               </div>\n//             </div>\n//           </div>\n//           {/* Name */}\n//           <h5 className=\"formHeader\">Button User's Information</h5>\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Name</label>\n//             <div className=\"col-sm-10\">\n//               {/* Changed name to name=\"title\" - will need to change it back */}\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter your name\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the name of the person who will be using the button.</small>\n//             </div>\n//           </div>\n//           {/* Address */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Address</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"address\" onChange={this.handleChange} placeholder=\"e.g. 14 Locust Drive, Ringwood, NJ\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the address of the person who will be using the button.</small>\n//             </div>\n//           </div>\n//           {/* Phone number */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Phone number</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"phoneNumber\" onChange={this.handleChange} placeholder=\"xxx-xxx-xxxx\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the phone number of the person who will be using the button.</small>\n//             </div>\n//           </div>\n//           {/* Medical history */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Medical history</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"history\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n//           {/* Medications*/}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Medications</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"medications\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n//           {/* Allergies*/}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Allergies</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"allergies\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n//           {/* Emergency Contact Name */}\n//           <h5 className=\"formHeader\">Emergency Contact Information</h5>\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Name</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactName\" onChange={this.handleChange} placeholder=\"Enter name\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the name of the primary emergency contact.</small>\n//             </div>\n//           </div>\n//           {/* Emergency Contact number */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Phone number</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactPhoneNumber\" onChange={this.handleChange} placeholder=\"xxx-xxx-xxxx\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the phone number of the primary emergency contact.</small>\n//             </div>\n//           </div>\n//           {/* Emergency Contact email */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Email</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"email\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactEmail\" onChange={this.handleChange} placeholder=\"Enter email\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the email address of the primary emergency contact.</small>\n//             </div>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// export default Form;\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.books);\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title && _this.state.author) {\n        API.saveBook({\n          title: _this.state.title,\n          author: _this.state.author,\n          synopsis: _this.state.synopsis\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all books and save them to this.state.books\n    value: function componentDidMount() {\n      this.loadBooks(); // console.log(this.state.books);\n    } // Loads all books  and sets them to this.state.books\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"What Books Should I Read?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.author,\n        onChange: this.handleInputChange,\n        name: \"author\",\n        placeholder: \"Author (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.synopsis,\n        onChange: this.handleInputChange,\n        name: \"synopsis\",\n        placeholder: \"Synopsis (Optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.author && this.state.title),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Submit Book\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Books On My List\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, book.title, \" by \", book.author)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["c:\\Users\\timwa\\Desktop\\rutgers\\homework\\project3\\client\\src\\pages\\Form.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","books","title","author","synopsis","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBook","length","map","book","_id"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,uBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,uBAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,uBAAzC;;IAEMC,K;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,QAAQ,EAAE;AAJJ,K;;UAcRC,S,GAAY,YAAM;AAChBf,MAAAA,GAAG,CAACgB,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEO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","sourcesContent":["// import React, { Component } from \"react\";\n// // import Jumbotron from \"../../components/Jumbotron\";\n// // import DeleteBtn from \"../../components/DeleteBtn\";\n// import API from \"../utils/API\";\n// // import { Col, Row, Container } from \"../../components/Grid\";\n// // import { List, ListItem } from \"../../components/List\";\n// // import { Input, TextArea, FormBtn } from \"../../components/Form\";\n\n\n\n// class Form extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {serialNumber: \"\",\n//     // need to change this back to name\n//     title: \"\",\n//     address: \"\",\n//     phoneNumber: \"\",\n//     history: \"\",\n//     medications: \"\",\n//     allergies: \"\",\n//     eContactName: \"\",\n//     eContactPhoneNumber: \"\",\n//     eContactEmail: \"\"};\n\n \n\n\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n  \n\n//   handleChange(event) {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n\n//   handleSubmit(event) {\n//     console.log(\"the form worked!\")\n//     console.log(this.state.address);\n//     event.preventDefault();\n//     event.target.reset();\n//   }\n\n\n//   render() {\n//     return (\n//       <div className=\"formWrapper\">\n//         <form onSubmit={this.handleSubmit}>\n\n//           {/* Serial number */}\n//           <div className=\"form-group\">\n//             <div className=\"row\">\n//               <div className=\"col\">\n//                 <label>Button Serial Number</label>\n//                 <input type=\"text\" className=\"form-control\" name=\"serialNumber\" onChange={this.handleChange} placeholder=\"Enter serial number\"></input>\n//                 <small id=\"emailHelp\" className=\"form-text text-muted\">This is found on the bottom of the button with 4 numbers and 4 letters.</small>\n//               </div>\n//               <div className=\"col\">\n//                 <img className=\"buttonPic\" src=\"https://media.amazonwebservices.com/blog/2017/IoTEnterprise-16-AWSIoTButtonSerialNum-sm.png\" alt=\"amazonButtonBack\"></img>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Name */}\n//           <h5 className=\"formHeader\">Button User's Information</h5>\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Name</label>\n//             <div className=\"col-sm-10\">\n//               {/* Changed name to name=\"title\" - will need to change it back */}\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter your name\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the name of the person who will be using the button.</small>\n//             </div>\n//           </div>\n\n//           {/* Address */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Address</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"address\" onChange={this.handleChange} placeholder=\"e.g. 14 Locust Drive, Ringwood, NJ\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the address of the person who will be using the button.</small>\n//             </div>\n//           </div>\n\n//           {/* Phone number */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Phone number</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"phoneNumber\" onChange={this.handleChange} placeholder=\"xxx-xxx-xxxx\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the phone number of the person who will be using the button.</small>\n//             </div>\n//           </div>\n\n//           {/* Medical history */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Medical history</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"history\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n\n//           {/* Medications*/}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Medications</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"medications\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n\n//           {/* Allergies*/}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Allergies</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" name=\"allergies\" onChange={this.handleChange} id=\"inputEmail3\"></input>\n//             </div>\n//           </div>\n\n//           {/* Emergency Contact Name */}\n//           <h5 className=\"formHeader\">Emergency Contact Information</h5>\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Name</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactName\" onChange={this.handleChange} placeholder=\"Enter name\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the name of the primary emergency contact.</small>\n//             </div>\n//           </div>\n\n//           {/* Emergency Contact number */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Phone number</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"text\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactPhoneNumber\" onChange={this.handleChange} placeholder=\"xxx-xxx-xxxx\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the phone number of the primary emergency contact.</small>\n//             </div>\n//           </div>\n\n//           {/* Emergency Contact email */}\n//           <div className=\"form-group row\">\n//             <label className=\"col-sm-2 col-form-label\">Email</label>\n//             <div className=\"col-sm-10\">\n//               <input type=\"email\" className=\"form-control\" id=\"inputEmail3\" name=\"eContactEmail\" onChange={this.handleChange} placeholder=\"Enter email\"></input>\n//               <small id=\"emailHelp\" className=\"form-text text-muted\">This is the email address of the primary emergency contact.</small>\n//             </div>\n//           </div>\n\n//           <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n\n// export default Form;\n\n\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nclass Books extends Component {\n  // Setting our component's initial state\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  };\n\n  // When the component mounts, load all books and save them to this.state.books\n  componentDidMount() {\n    this.loadBooks();\n    // console.log(this.state.books);\n  }\n\n  // Loads all books  and sets them to this.state.books\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n      console.log(this.state.books);\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  // Handles updating component state when the user types into the input field\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.author) {\n      API.saveBook({\n        title: this.state.title,\n        author: this.state.author,\n        synopsis: this.state.synopsis\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                value={this.state.author}\n                onChange={this.handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n                value={this.state.synopsis}\n                onChange={this.handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              />\n              <FormBtn\n                disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => {\n                  return (\n                    <ListItem key={book._id}>\n                      <a href={\"/books/\" + book._id}>\n                        <strong>\n                          {book.title} by {book.author}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}